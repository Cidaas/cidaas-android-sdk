plugins {
    id 'maven-publish'
    id 'com.android.library'
    id 'jacoco'
    id 'org.owasp.dependencycheck'
}

android {
    compileSdk 34

    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34
        versionCode 1

        android.buildFeatures.buildConfig true
        versionName "0.0.0.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        // We need this in every sub-module due to https://issuetracker.google.com/issues/158695880
        buildConfigField("long", "VERSION_CODE", "${defaultConfig.versionCode}")
        buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
        debug {
            enableJacoco(project, 'Debug')
            testCoverageEnabled true

        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
    }
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/test/assets/']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    namespace 'de.cidaas.sdk.android'
    lint {
        abortOnError false
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
}
jacoco {
    toolVersion = "0.8.7"
}

afterEvaluate {
    tasks.withType(Test) {
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn "testDebugUnitTest" // Name of the task may vary depending on your build variants
        reports {
            xml.required.set(true)
            csv.required.set(true)
            html.required.set(true)
            html.outputLocation.set(layout.buildDirectory.dir('jacocoHtml'))
        }
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.7.0'

    //testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    //testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    //For Retrofit Call
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    //For Reactive X
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.8'
    implementation 'com.jakewharton.rxbinding:rxbinding:1.0.1'

    //For Custom Tabs
    implementation 'androidx.browser:browser:1.8.0'

    //Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // common codec for TOTP Generation
    implementation 'commons-codec:commons-codec:1.15'

    //Android X for finger print authentication after android pie
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.android.support:appcompat-v7:33'
    implementation 'com.google.android.material:material:1.12.0'

    //For Permission
    implementation 'pub.devrel:easypermissions:3.0.0'

    //Testing
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // testImplementation "org.robolectric:robolectric:3.8"
    //Testing
    // Required -- JUnit 4 framework
    // Optional -- Mockito framework


    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.13'
    // updated version of robolectric misses functions that were previously included that's why we
    // additionally need hamcrest for a part of this this sub-project
    testImplementation 'org.hamcrest:hamcrest:2.2'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.1'

    testImplementation 'androidx.test:monitor:1.7.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    /*///For ID card Scannner
    compile 'io.card:android-sdk:5.5.1'*/

}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.

afterEvaluate {
    // Because the components are created only during the afterEvaluate phase, you must
    // configure your publications using the afterEvaluate() lifecycle method.
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github.Cidaas'
                artifactId = project.name
                version = '3.2.6'
                afterEvaluate {
                    from components.release
                }
            }
        }
    }

}

